{"version":3,"sources":["components/Search.js","components/Header.js","components/FeedItem.js","components/Feed.js","App.js","serviceWorker.js","index.js"],"names":["Search","className","style","flex","InputGroup","searchStyle","inputStyle","FormControl","placeholder","aria-label","aria-describedby","onChange","e","props","searchPost","target","value","Component","buttonStyle","Header","Navbar","bg","this","colorTheme","variant","expand","boxShadow","fixed","Brand","href","headerStyle","Toggle","aria-controls","Collapse","id","Form","Nav","Link","Button","width","height","borderRadius","background","marginRight","marginLeft","onClick","lightMode","darkMode","FeedItem","margin","cardBg","src","currentPost","download_url","alt","paddingTop","paddingBottom","paddingLeft","fontSize","url","textDecoration","color","textColor","fontFamily","author","Feed","finalList","postsList","map","post","key","columnWidth","App","state","posts","searchTitle","currentPosts","title","newList","filter","includes","capitalize","setState","console","log","string","charAt","toUpperCase","slice","axios","get","then","res","data","webBg","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e4270c5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport default class Search extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"mr-sm-2\" style={{ flex: 1 }}>\r\n                <InputGroup className=\"mb-3\" style={searchStyle.inputStyle}>\r\n                <FormControl\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    onChange={(e) => this.props.searchPost(e.target.value)}\r\n                />\r\n                </InputGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst searchStyle = {\r\n    buttonStyle: {\r\n        'background': ''\r\n    },\r\n    inputStyle: {\r\n        'marginTop': 15,\r\n        'width': '100%',\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Navbar, Nav, Form, Button} from 'react-bootstrap';\r\nimport Search from '../components/Search';\r\n\r\nexport default class Header extends Component{\r\n    render(){\r\n        return (\r\n            <Navbar bg={\"\"+this.props.colorTheme.bg} variant={\"\"+this.props.colorTheme.variant} expand=\"md\" style={{ boxShadow: \"0px 0px 5px 2px grey\" }} fixed=\"top\">\r\n                <Navbar.Brand href=\"#home\" style={headerStyle} className=\"ml-sm-5\">Picogram</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Form style={{ flex:1 }}>\r\n                        <Search searchPost={this.props.searchPost}/>\r\n                    </Form>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link>\r\n                            <Button style={{ width: 40, height: 40, borderRadius: 40, background: '#ccc', marginRight: 10, marginLeft: 10}} onClick={this.props.lightMode}>\r\n                            </Button>\r\n                            Light\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Button style={{ width: 40, height: 40, borderRadius: 40, background: '#13131b',  marginRight: 10, marginLeft: 10}} onClick={this.props.darkMode}>\r\n                            </Button>\r\n                            Dark\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst headerStyle = {\r\n    'fontFamily': 'Montserrat',\r\n    'fontWeight': 'bold',\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nexport default class FeedItem extends Component{\r\n    render(){\r\n        return (\r\n            <div style={{ borderRadius: 30, boxShadow: \"0px 0px 5px 2px grey\", margin: 20, background: this.props.colorTheme.cardBg }}>\r\n                <div>\r\n                    <img src={\"\"+this.props.currentPost.download_url} alt=\"Pic Dp\" style={{ width: \"100%\", borderRadius: 30 }}/>\r\n                </div>\r\n                <div className=\"d-flex\" style={{ paddingTop: 10, paddingBottom: 10, paddingLeft: 10 }}>\r\n                    <div>\r\n                        <img src={\"\"+this.props.currentPost.download_url} alt=\"Profile Dp\" style={{ width: 40, height: 40, borderRadius: 35 }}/>\r\n                    </div>\r\n                    <div className=\"align-self-center\" style={{ paddingLeft: 15, fontSize: 17 }}>\r\n                        <a href={\"\"+this.props.currentPost.url} style={{ textDecoration: 'none', color: this.props.colorTheme.textColor, fontFamily: 'Montserrat' }}>{ this.props.currentPost.author }</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport FeedItem from '../components/FeedItem';\r\nimport StackGrid from 'react-stack-grid';\r\n\r\n\r\nexport default class Feed extends Component{\r\n    render(){\r\n        let finalList = this.props.postsList.map((post) => (\r\n            <FeedItem key={post.id} currentPost={post} colorTheme={this.props.colorTheme}/>\r\n        ));\r\n        return (\r\n            <div style={{ paddingTop: 100 }}>\r\n                <StackGrid\r\n                    columnWidth={320}\r\n                >\r\n                    {finalList}\r\n                </StackGrid>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from '../src/components/Header';\nimport Feed from '../src/components/Feed';\nimport axios from 'axios';\n\nclass App extends Component{\n  state = {\n    posts: [],\n    searchTitle: '',\n    currentPosts: [],\n    colorTheme: {\n      'bg': 'light',\n      'variant': 'light',\n      'webBg': '#fff',\n      'cardBg': '#fff',\n      'textColor': 'black'\n    }\n  }\n\n  capitalize(string) \n  {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  componentDidMount(){\n    axios.get('https://picsum.photos/v2/list?limit=15')\n         .then(res => this.setState({posts: res.data, currentPosts: res.data}));\n  }\n\n  searchPost = (title) => {\n    let currentList = this.state.posts;\n    let newList = [];\n    newList = currentList.filter(post => \n        post.author.includes(this.capitalize(title))\n    );\n    \n    this.setState({currentPosts: newList});\n  }\n\n  lightMode = () => {\n    this.setState({\n      colorTheme: {\n        'bg': 'light',\n        'variant': 'light',\n        'webBg': '#fff',\n        'cardBg': '#fff',\n        'textColor': 'black'\n      }\n    });\n\n    console.log(\"Light mode!\");\n  }\n\n  darkMode = () => {\n    this.setState({\n      colorTheme: {\n        'bg': 'dark',\n        'variant': 'dark',\n        'webBg': '#1d1e28',\n        'cardBg': '#121219',\n        'textColor': 'white'\n      }\n    });\n\n    console.log(\"Dark mode!\")\n  }\n\n  render(){\n    return (\n      <div className=\"App\" style={{ background: this.state.colorTheme.webBg }}>\n        <Header searchPost={this.searchPost} lightMode={this.lightMode} darkMode={this.darkMode} colorTheme={this.state.colorTheme} />\n        <Feed postsList={this.state.currentPosts} colorTheme={this.state.colorTheme} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}